{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["ListItem","name","this","props","deleteItem","completeTask","data","map","element","className","key","type","checked","status","onChange","bind","style","textDecorationLine","onClick","deleteTask","Component","Boolean","window","location","hostname","match","TodoList","state","list","inputVal","setState","e","target","value","filter","forEach","index","item","push","Object","assign","handleChange","placeholder","addTask","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NA8BeA,G,qLA1BFC,GACTC,KAAKC,MAAMC,WAAWH,K,mCAEXA,GACXC,KAAKC,MAAME,aAAaJ,K,+BAEhB,IAAD,OACP,OACE,4BAEIC,KAAKC,MAAMG,KAAKC,KAAI,SAAAC,GAClB,OACE,wBAAIC,UAAU,WAAWC,IAAKF,EAAQP,MACpC,2BAAOU,KAAK,WACVC,QAA4B,IAAnBJ,EAAQK,OACjBC,SAAU,EAAKT,aAAaU,KAAK,EAAMP,EAAQP,QACjD,0BAAMe,MAAO,CAACC,mBAAuC,IAAnBT,EAAQK,OAAe,OAAS,iBAAkBL,EAAQP,MAC5F,4BAAQQ,UAAU,SAASS,QAAS,EAAKC,WAAWJ,KAAK,EAAMP,EAAQP,OAAvE,yB,GAlBOmB,cCFHC,QACW,cAA7BC,OAAOC,SAASC,UACe,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MACvB,2D,ICCAC,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,KAAM,CAAC,CACL3B,KAAM,gBAAiBY,OAAQ,GAC/B,CACAZ,KAAM,eAAgBY,OAAQ,GAC7B,CACDZ,KAAM,uBAAwBY,OAAQ,GACrC,CACDZ,KAAM,uBAAwBY,OAAQ,IAExCgB,SAAU,IAZA,E,sDAgBP3B,KAAKyB,MAAME,UAChB3B,KAAK4B,SAAS,CACZF,KAAK,GAAD,mBAAM1B,KAAKyB,MAAMC,MAAjB,CAAuB,CACzB3B,KAAMC,KAAKyB,MAAME,SACjBhB,OAAQ,KAEVgB,SAAU,O,mCAGDE,GACX7B,KAAK4B,SAAS,CACZD,SAAUE,EAAEC,OAAOC,U,iCAGZhC,GACT,IAAMK,EAAOJ,KAAKyB,MAAMC,KAAKM,QAAO,SAAA1B,GAAO,OAAIA,EAAQP,OAASA,KAChEC,KAAK4B,SAAS,CACZF,KAAMtB,M,mCAGGL,GAAO,IAAD,OACXyB,EAAW,GACjBxB,KAAKyB,MAAMC,KAAKO,SAAQ,SAAC3B,EAAS4B,GAChC,GAAI5B,EAAQP,OAASA,EAAM,CACzB,IAAMoC,EAAO,EAAKV,MAAMC,KAAKQ,GAC7BV,EAASY,KAAKC,OAAOC,OAAO,GAAIH,EAAM,CAACxB,OAAwB,IAAhBwB,EAAKxB,OAAe,EAAI,KACvE,EAAKiB,SAAS,CACZF,KAAMF,SAGRA,EAASY,KAAK9B,Q,+BAKlB,OACE,yBAAKC,UAAU,iBACf,4BAAQA,UAAU,UAAlB,mBACA,kBAAC,EAAD,CAAUH,KAAMJ,KAAKyB,MAAMC,KAAMxB,WAAYF,KAAKE,WAAWW,KAAKb,MAChEG,aAAcH,KAAKG,aAAaU,KAAKb,QACvC,gCACE,2BAAOS,KAAK,OAAOsB,MAAO/B,KAAKyB,MAAME,SAAUf,SAAUZ,KAAKuC,aAAa1B,KAAKb,MAAOwC,YAAY,qBACnG,4BAAQjC,UAAU,UAAUS,QAAShB,KAAKyC,QAAQ5B,KAAKb,OAAvD,sB,GA3DekB,aAmEvBwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SDqBpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.74256069.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\n\nclass ListItem extends Component {\n  deleteTask(name) {\n    this.props.deleteItem(name)\n  }\n  completeTask(name) {\n    this.props.completeTask(name)\n  }\n  render() {\n    return (\n      <ul>\n        {\n          this.props.data.map(element => {\n            return (\n              <li className=\"listItem\" key={element.name}>\n                <input type=\"checkbox\"\n                  checked={element.status === 1}\n                  onChange={this.completeTask.bind(this, element.name)}/>\n                <span style={{textDecorationLine: element.status === 0 ? 'none' : 'line-through'}}>{element.name}</span>\n                <button className=\"delete\" onClick={this.deleteTask.bind(this, element.name)}>删除</button>\n              </li>)\n        })\n      }\n      </ul>\n    )\n  }\n}\n\nexport default ListItem","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ListItem from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass TodoList extends Component {\n  constructor() {\n    super()\n    this.state = {\n      list: [{\n        name: 'learn english', status: 0\n      },{\n        name: 'Learn guitar', status: 0\n      }, {\n        name: 'weight less than 100', status: 0\n      }, {\n        name: 'have 100,000 deposit', status: 0\n      }],\n      inputVal: ''\n    }\n  }\n  addTask() {\n    if (!this.state.inputVal) return\n    this.setState({\n      list: [...this.state.list, {\n        name: this.state.inputVal,\n        status: 0\n      }],\n      inputVal: ''\n    })\n  }\n  handleChange(e) {\n    this.setState({\n      inputVal: e.target.value\n    })\n  }\n  deleteItem(name) {\n    const data = this.state.list.filter(element => element.name !== name)\n    this.setState({\n      list: data\n    })\n  }\n  completeTask(name) {\n    const TodoList = []\n    this.state.list.forEach((element, index) => {\n      if (element.name === name) {\n        const item = this.state.list[index]\n        TodoList.push(Object.assign({}, item, {status: item.status === 0 ? 1 : 0}))\n        this.setState({\n          list: TodoList\n        })\n      } else {\n        TodoList.push(element)\n      }\n    })\n  }\n  render() {\n    return (\n      <div className=\"reactTodoList\">\n      <header className=\"header\">React todo list</header>\n      <ListItem data={this.state.list} deleteItem={this.deleteItem.bind(this)}\n        completeTask={this.completeTask.bind(this)}/>\n      <footer>\n        <input type=\"text\" value={this.state.inputVal} onChange={this.handleChange.bind(this)} placeholder=\"添加todo\"></input>\n        <button className=\"addTodo\" onClick={this.addTask.bind(this)}>添加</button>\n      </footer>\n    </div>\n    )\n  }\n}\n\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}